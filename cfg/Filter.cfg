#!/usr/bin/env python
PACKAGE = "livox_ros_driver2"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

box_group = gen.add_group("Box filter", "Filtering based on a bounding box")
box_group.add("enable_box_filtering", bool_t, 0, "Enable filtering based on box", True)
box_group.add("box_min_x", double_t, 0, "Minimum X of the bounding box", -1.0, -50.0, 50.0)
box_group.add("box_min_y", double_t, 0, "Minimum Y of the bounding box", -1.0, -50.0, 50.0)
box_group.add("box_min_z", double_t, 0, "Minimum Z of the bounding box", -1.0, -50.0, 50.0)
box_group.add("box_max_x", double_t, 0, "Maximum X of the bounding box", 1.0, -50.0, 50.0)
box_group.add("box_max_y", double_t, 0, "Maximum Y of the bounding box", 1.0, -50.0, 50.0)
box_group.add("box_max_z", double_t, 0, "Maximum Z of the bounding box", 1.0, -50.0, 50.0)
box_group.add("outer_box_min_x", double_t, 0, "Minimum X of the outer bounding box", -1.0, -100.0, 100.0)
box_group.add("outer_box_min_y", double_t, 0, "Minimum Y of the outer bounding box", -1.0, -100.0, 100.0)
box_group.add("outer_box_min_z", double_t, 0, "Minimum Z of the outer bounding box", -1.0, -100.0, 100.0)
box_group.add("outer_box_max_x", double_t, 0, "Maximum X of the outer bounding box", 1.0, -100.0, 100.0)
box_group.add("outer_box_max_y", double_t, 0, "Maximum Y of the outer bounding box", 1.0, -100.0, 100.0)
box_group.add("outer_box_max_z", double_t, 0, "Maximum Z of the outer bounding box", 1.0, -100.0, 100.0)
box_group.add("box_frame", str_t, 0, "Frame ID of the bounding box", "aristos_base_footprint")

tag_group = gen.add_group("Tag filter", "Filtering based on point tags")
tag_group.add("enable_tag_filtering", bool_t, 0, "Enable filtering based on tag", True)
rsrv = tag_group.add_group("Reserved", "Reserved")
other = tag_group.add_group("Other", "Other")
atmospheric = tag_group.add_group("Atmospheric", "Atmospheric particles like rain, fog and dust")
dragging = tag_group.add_group("Dragging", "Dragging noise between objects")
rsrv.add("rsrv_zero", bool_t, 0, "Keep zero", True)
rsrv.add("rsrv_one", bool_t, 0, "Keep one", True)
rsrv.add("rsrv_two", bool_t, 0, "Keep two", True)
rsrv.add("rsrv_three", bool_t, 0, "Keep three", True)
other.add("other_high", bool_t, 0, "Keep high confidence level (normal points)", True)
other.add("other_moderate", bool_t, 0, "Keep moderate confidence level", True)
other.add("other_low", bool_t, 0, "Keep low confidence level", True)
other.add("other_rsrv", bool_t, 0, "Keep reserved", True)
atmospheric.add("atm_high", bool_t, 0, "Keep high confidence level (normal points)", True)
atmospheric.add("atm_moderate", bool_t, 0, "Keep moderate confidence level", True)
atmospheric.add("atm_low", bool_t, 0, "Keep low confidence level", True)
atmospheric.add("atm_rsrv", bool_t, 0, "Keep reserved", True)
dragging.add("drag_high", bool_t, 0, "Keep high confidence level (normal points)", True)
dragging.add("drag_moderate", bool_t, 0, "Keep moderate confidence level", True)
dragging.add("drag_low", bool_t, 0, "Keep low confidence level", True)
dragging.add("drag_rsrv", bool_t, 0, "Keep reserved", True)

exit(gen.generate(PACKAGE, "livox_ros_driver2", "Filter"))